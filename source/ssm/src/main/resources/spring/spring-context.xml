<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
	default-lazy-init="true">
	<description>Spring Configuration</description>

	<!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://rm-uf653h6hcelwvkwq5o.mysql.rds.aliyuncs.com:3306/frank" />
		<property name="username" value="frank" />
		<property name="password" value="12345678" />
		<property name="initialSize" value="1" />
		<property name="minIdle" value="3" />
		<property name="maxActive" value="50" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用） <property name="poolPreparedStatements" 
			value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
			value="20" /> -->
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>
	 
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	
	<context:component-scan base-package="com.cheer.ssm.dao">
		<context:include-filter type="annotation" 
			expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	<context:component-scan base-package="com.cheer.ssm.service">
		<context:include-filter type="annotation" 
			expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
	<!-- 
	<bean id="userDao" class="com.cheer.ssm.dao.UserDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	
	<bean id="userLogDao" class="com.cheer.ssm.dao.UserLogDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	
	<bean id="loginService" class="com.cheer.ssm.service.LoginService"/>
	 -->
</beans>